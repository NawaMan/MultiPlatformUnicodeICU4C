name: Build and Test ICU4C

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # x86-64 Build Job
  build-library-linux-x86-64:
    name: Build (Linux x86-64)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set non-interactive frontend
        run: echo 'DEBIAN_FRONTEND=noninteractive' >> $GITHUB_ENV

      - name: Run on x86-64
        run: |
          chmod +x *.sh
          mkdir -p build
          mkdir -p dist

          echo "Ensure build environment ..."
          sudo ./ensure-linux-x86-64-build-environment.sh
          
          echo "Build ..."
          ./build-linux-x86-64.sh
            
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: icu4c-linux-x86-64
          path: dist/icu4c-*_linux-x86-64_*.zip
          if-no-files-found: error
          retention-days: 1

  # x86-64 Build Test Job
  build-test-linux-x86-64:
    name: Build Test (Linux x86-64)
    needs: build-library-linux-x86-64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set non-interactive frontend
        run: echo 'DEBIAN_FRONTEND=noninteractive' >> $GITHUB_ENV

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: icu4c-linux-x86-64
          path: dist

      - name: Run on x86-64
        run: |
          pushd tests

          chmod +x *.sh
          mkdir -p build
          
          echo "Ensure build environment ..."
          sudo ./ensure-linux-x86-64-build-test-environment.sh

          echo "Build simple test ..."
          DIST_FILE=$(find ../dist -name 'icu4c-*_linux-x86-64_*.zip' -type f)
          ./build-simple-test-linux-x86-64.sh "$DIST_FILE"

          popd

      - name: Upload test artifact
        uses: actions/upload-artifact@v4
        with:
          name: icu4c-linux-x86-64-test
          path: tests/simple-test
          if-no-files-found: error
          retention-days: 1

  # x86-64 Run Test Job
  run-test-linux-x86-64:
    name: Run Test (Linux x86-64)
    needs: build-test-linux-x86-64
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: icu4c-linux-x86-64-test

      - name: Install dependencies
        run: |
            # Install minimal dependencies for testing
            sudo apt-get update
            sudo apt-get install -y libfmt-dev    # Do this for now, we should wap this in another project

            chmod +x simple-test
            ./simple-test
  

  # ARM-64 Build Job
  build-library-linux-arm-64:
    name: Build (Linux ARM-64)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set non-interactive frontend
        run: echo 'DEBIAN_FRONTEND=noninteractive' >> $GITHUB_ENV

      - name: Run on ARM-64
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: aarch64
          distro: ubuntu22.04
          run: |
            chmod +x *.sh
            mkdir -p build
            mkdir -p dist

            echo "Ensure build environment ..."
            ./ensure-linux-arm-64-build-environment.sh
            
            echo "Build ..."
            ./build-linux-arm-64.sh

            
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: icu4c-linux-arm-64
          path: dist/icu4c-*_linux-arm-64_*.zip
          if-no-files-found: error
          retention-days: 1

  # ARM-64 Build Test Job
  build-test-linux-arm-64:
    name: Build Test (Linux ARM-64)
    needs: build-library-linux-arm-64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set non-interactive frontend
        run: echo 'DEBIAN_FRONTEND=noninteractive' >> $GITHUB_ENV

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: icu4c-linux-arm-64
          path: dist

      - name: Run on ARM-64
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: aarch64
          distro: ubuntu22.04
          run: |
            pushd tests

            chmod +x *.sh
            mkdir -p build
            
            echo "Ensure build environment ..."
            sudo ./ensure-linux-arm-64-build-test-environment.sh

            echo "Build simple test ..."
            DIST_FILE=$(find ../dist -name 'icu4c-*_linux-arm-64_*.zip' -type f)
            ./build-simple-test-linux-arm-64.sh "$DIST_FILE"

            popd

      - name: Upload test artifact
        uses: actions/upload-artifact@v4
        with:
          name: icu4c-linux-arm-64-test
          path: tests/simple-test
          if-no-files-found: error
          retention-days: 1

  # ARM-64 Run Test Job
  run-test-linux-arm-64:
    name: Run Test (Linux ARM-64)
    needs: build-test-linux-arm-64
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: icu4c-linux-arm-64-test

      - name: Install dependencies
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: aarch64
          distro: ubuntu22.04
          run: |
            # Install minimal dependencies for testing
            apt-get update
            apt-get install -y libfmt-dev    # Do this for now, we should wap this in another project

            chmod +x simple-test
            ./simple-test
            
            
  # Windows x86-64 Build Job
  build-library-windows-x86-64:
    name: Build (Windows x86-64)
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup PowerShell Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install VS Build Tools and C++ Workload
        shell: pwsh
        run: |
          choco install visualstudio2022buildtools --yes
          $exitCode1 = $LASTEXITCODE
          if ($exitCode1 -eq 3010) {
            Write-Host "VS Build Tools installed successfully, reboot required (3010)."
          } elseif ($exitCode1 -ne 0) {
            throw "VS Build Tools installation failed with exit code $exitCode1."
          }
        
          choco install visualstudio2022-workload-vctools --yes
          $exitCode2 = $LASTEXITCODE
          if ($exitCode2 -eq 3010) {
            Write-Host "VC++ Workload installed successfully, reboot required (3010)."
          } elseif ($exitCode2 -ne 0) {
            throw "VC++ Workload installation failed with exit code $exitCode2."
          }
        
          # âœ… Prevent GitHub Actions from misinterpreting the exit code
          exit 0
        

      - name: Install LLVM and Clang
        shell: pwsh
        run: |
          # Create build directories
          New-Item -ItemType Directory -Path build -Force | Out-Null
          New-Item -ItemType Directory -Path dist  -Force | Out-Null
          .\Ensure-WindowsBuildEnvironment.ps1

          .\Build-Windows-x86-64.ps1
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: icu4c-windows-x86-64
          path: dist/icu4c-*_windows-x86-64_*.zip
          if-no-files-found: error
          retention-days: 1

  # Windows x86-64 Build Test Job
  build-test-windows-x86-64:
    name: Build Test (Windows x86-64)
    needs: build-library-windows-x86-64
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: icu4c-windows-x86-64
          path: dist

      - name: Enable UTF-8 and allow script execution
        run: |
          chcp 65001
          Set-ExecutionPolicy Bypass -Scope Process -Force

      - name: Build test executable
        shell: pwsh
        run: |
          cd tests
          $distFile = Get-ChildItem -Path "../dist" -Filter "icu4c-*_windows-x86-64_*.zip" -Recurse | Select-Object -ExpandProperty FullName
          ./Build-SimpleTest-windows-x86-64.ps1 $distFile

      - name: Upload test binary
        uses: actions/upload-artifact@v4
        with:
          name: icu4c-windows-x86-64-test
          path: tests/simple-test.exe


  # Windows x86-64 Run Test Job
  run-test-windows-x86-64:
    name: Run Test (Windows x86-64)
    needs: build-test-windows-x86-64
    runs-on: windows-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: icu4c-windows-x86-64-test

      - name: Run test
        shell: pwsh
        run: |
          # Run the test executable
          .\simple-test.exe
