  # x86-64 Build Job
  build-x86-64:
    name: Build (Linux x86-64)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set non-interactive frontend
        run: echo 'DEBIAN_FRONTEND=noninteractive' >> $GITHUB_ENV

      - name: Run on x86-64
        run: |




            # Set environment variables
            export CLANG_VERSION=20

            # Install dependencies
            sudo apt-get update
            sudo apt-get install -y      \
              autoconf                   \
              automake                   \
              build-essential            \
              cmake                      \
              curl                       \
              g++-multilib               \
              gcc-multilib               \
              gnupg                      \
              lsb-release                \
              pkg-config                 \
              python3                    \
              software-properties-common \
              unzip                      \
              wget                       \
              libfmt-dev                 \
              zip
            
            # Install LLVM/Clang
            wget https://apt.llvm.org/llvm.sh
            chmod +x llvm.sh || true
            sudo ./llvm.sh ${CLANG_VERSION}
            rm llvm.sh




            # Create symlinks for clang and LLVM tools to be available without version suffix
            sudo update-alternatives --install /usr/bin/clang   clang   /usr/bin/clang-${CLANG_VERSION}   100
            sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-${CLANG_VERSION} 100
            sudo update-alternatives --set                      clang   /usr/bin/clang-${CLANG_VERSION}
            sudo update-alternatives --set                      clang++ /usr/bin/clang++-${CLANG_VERSION}
            sudo ln -sf /usr/bin/llvm-ar-${CLANG_VERSION} /usr/bin/llvm-ar
            sudo ln -sf /usr/bin/llvm-ranlib-${CLANG_VERSION} /usr/bin/llvm-ranlib

            echo "Setup LLVM/Clang"
            echo "Clang       version: "$(clang   --version)
            echo "Clang++     version: "$(clang++ --version)
            echo "LLVM-ar     version: "$(llvm-ar-${CLANG_VERSION}     --version)
            echo "LLVM-ranlib version: "$(llvm-ranlib-${CLANG_VERSION} --version)
            
            echo "Build ICU4C"
            ./build-linux-x86-64.sh
            
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: icu4c-linux-x86-64
          path: dist/icu4c-*_linux-x86-64_*.zip
          if-no-files-found: error
          retention-days: 1

  # x86-64 Build Test Job
  build-test-x86-64:
    name: Build Test (Linux x86-64)
    needs: build-x86-64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set non-interactive frontend
        run: echo 'DEBIAN_FRONTEND=noninteractive' >> $GITHUB_ENV

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: icu4c-linux-x86-64
          path: dist

      - name: Run on x86-64
        run: |


            # Set environment variables
            export CLANG_VERSION=20

            # Install minimal dependencies for testing
            sudo apt-get update
            sudo apt-get install -y      \
              build-essential            \
              g++-multilib               \
              gcc-multilib               \
              libfmt-dev                 \
                                         \
                                         \
                                         \
              unzip                      \
              wget
            
            # Install LLVM/Clang
            wget https://apt.llvm.org/llvm.sh
            chmod +x llvm.sh || true
            sudo ./llvm.sh ${CLANG_VERSION}
            rm llvm.sh




            # Create symlinks for clang and LLVM tools to be available without version suffix
            sudo update-alternatives --install /usr/bin/clang   clang   /usr/bin/clang-${CLANG_VERSION}   100
            sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-${CLANG_VERSION} 100
            sudo update-alternatives --set                      clang   /usr/bin/clang-${CLANG_VERSION}
            sudo update-alternatives --set                      clang++ /usr/bin/clang++-${CLANG_VERSION}
            sudo ln -sf /usr/bin/llvm-ar-${CLANG_VERSION} /usr/bin/llvm-ar
            sudo ln -sf /usr/bin/llvm-ranlib-${CLANG_VERSION} /usr/bin/llvm-ranlib

            echo "Setup LLVM/Clang"
            echo "Clang       version: "$(clang   --version)
            echo "Clang++     version: "$(clang++ --version)
            echo "LLVM-ar     version: "$(llvm-ar-${CLANG_VERSION}     --version)
            echo "LLVM-ranlib version: "$(llvm-ranlib-${CLANG_VERSION} --version)

            mkdir -p tests/build
            DIST_FILE=$(find dist -name 'icu4c-*_linux-x86-64_*.zip' -type f)
            unzip -o "$DIST_FILE" -d tests/build

            cd tests
            ./build-simple-test-linux-x86-64.sh "../$DIST_FILE"

      - name: Upload test artifact
        uses: actions/upload-artifact@v4
        with:
          name: icu4c-linux-x86-64-test
          path: tests/simple-test
          if-no-files-found: error
          retention-days: 1

  # x86-64 Run Test Job
  run-test-x86-64:
    name: Run Test (Linux x86-64)
    needs: build-test-x86-64
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: icu4c-linux-x86-64-test

      - name: Run tests
        run: |
          chmod +x simple-test
          ./simple-test
